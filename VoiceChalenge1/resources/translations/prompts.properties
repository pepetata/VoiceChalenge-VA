#============================================
#voice chalenge prompts
#============================================
voice.chalenge.mark=on your mark
voice.chalenge.get.set=get set
voice.chalenge.go=starting now
voice.chalenge.badge=please, scan your badge
voice.chalenge.wait=ok. wait a second
voice.chalenge.press.pause=please press the pause button



#============================================
#generic/shared prompts
#============================================
generic.correct.confirm2=<spell>{0}</spell>, {1}, correct?
generic.wrongValue.ready.prompt=wrong {0}, to try again say ready
generic.sayReadyTryAgain.prompt={0},  to try again say ready
generic.sayReady.prompt={0}, say ready
generic.errorContactingHost.prompt=Error contacting host
generic.error.say.sign.off.prompt={0}, say sign off
generic.continue.prompt={0}, To continue say ready
generic.returnToPicking.prompt={0}. To return to picking, say ready.
generic.not.valid.at.this.time=not valid at this time
generic.printer=Printer?
generic.printer.help=Say printer number
generic.printer.confirm=printer <spell>{0}</spell>, correct?
generic.not.available={0} not available

#skipping prompts
generic.skip.aisle.notallowed=skip aisle not allowed
generic.skip.aisle.last=Last aisle to be picked, you must pick it now
generic.skip.aisle.confirm=Skip aisle, correct?
generic.skip.slot.notallowed=skip slot not allowed
generic.skip.slot.last=Last slot, skip slot not allowed
generic.skip.slot.confirm=Skip slot, correct?
generic.repick.skips.notallowed=repick skips not allowed
generic.repick.skips.confirm=repick skips, correct?
generic.repick.skips.noskips=no skips to repick, returning to picking

#============================================
#common region prompts
#============================================
generic.region.prompt=Region?
generic.region.help=Say region number
generic.another.region.prompt=Another Region?
generic.nomore.region.prompt=No more not valid until a region is specified. 
generic.nomore.region.confirm=No more, correct? 
generic.regionNotAuth.prompt=not authorized for any regions, see your supervisor
generic.change.region=Change region, correct?

#============================================
#core prompts
#============================================
core.welcome.prompt=Welcome to the {0} system. Current operator is {1}. Say ready
core.password.prompt=Password?
core.password.help=Say your password
core.function.prompt=Function? 
core.function.help=say the function number
core.noFunctions.prompt=Not authorized for any supported functions. Notify your supervisor
core.take.a.break.continue.work=To continue work, say ready
core.take.a.break.not.allowed=Breaks not allowed, to continue say ready
core.take.a.break.type=Break type?
core.take.a.break.type.help=Say the break type number or say description
core.change.function.not.allowed=Change function not allowed
core.function.notimplemented=function {0} not implemented, say ready to try again
core.signoff.confirm=Sign off, correct?
core.signoff.not.allowed=Sign off not allowed.

#============================================
#vehicle type prompts
#============================================
core.vehicleType.prompt=Vehicle Type?
core.vehicleType.help=Say the vehicle type number
core.vehicleID.prompt=Vehicle ID?
core.vehicleID.help=Say the vehicle ID
core.startSafetyCheck.prompt=Safety checklist. say yes, no or numeric value to verify each check
core.safetyCheckResponse.help=Say a numeric value
core.startSafetyCheckFail.Confirm={0}, failed, correct?
core.safetyCheckFailed=Your vehicle has failed, can you do a quick repair?
core.safetyQuickRepair.prompt=Perform quick repair, then say ready
core.safetyNewVehicle.prompt=Vehicle failed, get new vehicle

#============================================
#Back stocking prompt
#============================================
stocking.qty.over=You said {0}, only asked for {1}, try again.
stocking.reason=Reason?
stocking.reason.help=Speak the reason code or say description
stocking.wrong=Wrong {0}
stocking.invalid=<spell>{0}</spell> invalid, try again.
stocking.repick.confirm=Repick skips, correct?
stocking.repick.noskips=No skips to repick.
stocking.repick.not.allowed=Repick skips not allowed.
stocking.repick.howmuch.single={0} remaining at {1} line item
stocking.repick.howmuch.plural={0} remaining at {1} line items
stocking.last.put=last put was aisle <spell>{0}</spell>, <spell>{1}</spell>, put {2} of {3}
stocking.location={0},, Aisle <spell>{1}</spell>,, {2},, <spell>{3}</spell>
stocking.lpn=LPN {0}

stocking.staging.area=go to {0}
stocking.license.operator=License Plate?
stocking.license.system=License Plate {0}
stocking.license.help=Speak or scan the license plate number
stocking.reverse=Put away in reverse order?
stocking.reverse.confirmed=Receiving work in reverse order.
stocking.trip.complete=Trip complete.  To go back for skips, say ready.
stocking.check.residuals=Do you have residuals?
stocking.residuals.deliver=Deliver residuals to {0}.
stocking.residuals.deliver.help=Say check digits

stocking.oper.build.carton=Carton?
stocking.oper.build.carton.help=Speak or scan the carton ID
stocking.oper.build.stop=Stop build, correct?
stocking.oper.build.all=All cartons, correct?
stocking.oper.build.all.not.allowed=All cartons not allowed, to continue, say ready.
stocking.oper.build.license=LPN {0}
stocking.oper.build.qty=Quantity?
stocking.oper.build.qty.help=enter the quantity picked.
stocking.oper.build.qty.carton=Carton {0}
stocking.oper.build.complete=Build complete.

stocking.sys.build.all=This is a full pallet assignment.  To continue say ready.
stocking.sys.build.carton=<spell>{0}</spell>, pick {1}, {2}
stocking.sys.build.carton.help=Speak or scan the carton ID
stocking.sys.build.cancel=Cancel carton, correct?
stocking.sys.build.stop=Stop build, correct?
stocking.sys.build.ready.notallowed=you must speak the carton ID, try again
stocking.sys.build.quantity=Quantity?
stocking.sys.build.quantity.help=enter the quantity picked.
stocking.sys.build.quantity.short=You said {0}. Is this a short product?
stocking.sys.build.goback=Going back for shorts and skips.

stocking.put.pre.aisle={0}
stocking.put.aisle=Aisle <spell>{0}</spell>
stocking.put.post.aisle={0}

stocking.put.prompt.slot.help=Speak the check digit
stocking.put.prompt.carton=<spell>{0}</spell> put {1}, {2}
stocking.put.prompt.carton.help=speak the carton
stocking.put.prompt.carton.verify=Verify carton.
stocking.put.prompt.carton.cancel=Cancel carton, correct?
stocking.put.prompt.quantity=Quantity?
stocking.put.prompt.quantity.help=Speak the quantity put
stocking.put.prompt.quantity.short=How many did you put?
stocking.put.prompt.quantity.short.confirm=you said {0}, is this a short?

#============================================
#Cycle Counting Prompts
#============================================
cycle.next.location=next location?
cycle.next.location.help.system=Say ready for next assignment. Speak or scan location to override next assignment
cycle.next.location.help.operator=Say or scan a location
cycle.next.checkdigit=Check digit?
cycle.next.checkdigit.help=Say the check digit or product verification code or say ready.
cycle.no.more=No more assignments.
cycle.no.more.help=Say ready to change region or say sign off, take a break or change function.
cycle.location.pre.aisle={0}
cycle.location.aisle=Aisle {0}
cycle.location.post.aisle={0}
cycle.location.slot={0}
cycle.location.slot.help=Say or scan the check digit or the product verification code
cycle.location.slot.validate.cd=You must speak the check digits.
cycle.location.slot.empty=Is location empty?
cycle.location.info.prompt={0}, Aisle {1}, {2}, Slot {3}
cycle.location.info.prompt.noaisle={0}, {2}, Slot {3}
cycle.location.info.prompt.noaisle.recount=recount {0}, {2}, Slot {3}
cycle.location.speak.pvid=You must speak the product ID. Try again.
cycle.count.invalid.location=Incorrect location.
cycle.count.prompt.known=Are there {0} {1} present?
cycle.count.prompt.known.item=Are there {0} {1} of {2} present?
cycle.count.prompt.blind.recount=recount {0},, aisle {1},, {2},, Slot {3}
cycle.count.prompt.blind=How many {0} are present?
cycle.count.prompt.blind.item=How many {0} of {1} are present?
cycle.count.prompt.blind.help=Say the quantity
cycle.reason=Expected {0} you said {1}, reason code?
cycle.reason.help=Speak the reason code or say description
cycle.reserve.chain.unavailable=Reserve chain unavailable

#============================================
#Line Loading Prompts
#============================================
lineload.leave.on.pallet=Leave carton on pallet.
lineload.move.cartons=Move carton?
lineload.spur=spur?
lineload.spur.help=Say the spur number then say ready
lineload.carton=carton?
lineload.carton.help=Scan the carton or say the carton ID, followed by ready
lineload.carton.cancel=Abort loading carton <spell>{0}</spell>?
lineload.set.aside=Set carton aside. To continue, say ready.
lineload.pallet=<spell>{0}</spell>, <spell>{1}</spell>, pallet?
lineload.pallet.new=<spell>{0}</spell>, <spell>{1}</spell>, new pallet?
lineload.pallet.help=Scan or speak the pallet ID then say ready
lineload.closestop=Enter pallet for stop to close
lineload.closestop.help=Scan or speak the pallet ID then say ready
lineload.closestop.end=Route <spell>{0}</spell>, stop <spell>{1}</spell> is closed. Take away {2}. To continue, say ready.
lineload.route=Route <spell>{0}</spell>, Stop <spell>{1}</spell>

#============================================
#Loading prompts
#============================================
loading.request.route.prompt=Route?
loading.request.route.help=Say route number followed by ready
loading.start.loading=To start loading, say ready
loading.initialize.route.door.prompt=Door {0}
loading.initialize.route.checkdigit.help=say door check digits
loading.initialize.route.trailerid.prompt=Trailer ID?
loading.initialize.route.trailerid.help=say trailer ID
loading.initialize.route.trailerid.wrong.prompt=wrong {0}, try again
loading.confirm.multiple=Container <spell>{0}</spell>?
loading.container.not.found=Container <spell>{0}</spell> not found, to try again say ready
loading.main.container.prompt=Container?
loading.main.container.help=Speak or scan container number
loading.main.container.unload.prompt=Container to unload?
loading.main.container.unload.help=Speak or scan container number to unload
loading.main.container.main.prompt=Main Container?
loading.main.container.main.help=Speak or scan container number for main container to consolidate
loading.main.container.consolidate.prompt=Container to consolidate?
loading.main.container.consolidate.help=Speak or scan container number for container to consolidate
loading.position=Position?
loading.position.help=say 2 digit position
loading.route.complete=Route complete, for next route say ready
loading.load.consolidated.error=Container consolidated and cannot be loaded
loading.load.loaded.error=Container already loaded
loading.unload.notloaded.error=Container not loaded or consolidated, returning to loading
loading.consolidation.not.allowed=Consolidation not allowed, To continue say ready
loading.consolidation.status.error=Container cannot be consolidated
loading.consolidation.confirm=Consolidate {0} into {1}
loading.how.much.more={0} containers.
loading.route.number=Route {0}
loading.referencenumber.prompt=Speak the last two digits of the reference number
loading.referencenumber.wrong.prompt=wrong <spell>{0}</spell>, to try again say ready.

#============================================
#forkapps prompts
#============================================
forkapps.cancel.confirm=Cancel, correct?
forkapps.cancel.notallowed=Cancel not allowed in this region
forkapps.cancel.reason=Reason?
forkapps.cancel.reason.help=Say the reason code
forkapps.cancel.deliver=Deliver to {0}
forkapps.cancel.complete={0} canceled, say ready
forkapps.release.confirm=Release License, correct?
forkapps.release.notallowed=Release License not allowed in this region
forkapps.release.complete={0} released, say ready
forkapps.partial.confirm=partial, correct?
forkapps.partial.confirm.location=confirm location
forkapps.partial.notallowed=partial not allowed in this region
forkapps.complete=Complete. Say ready.

forkapps.location.info.prompt={0}, {2}, Location not available
forkapps.location.info.prompt.slot={0}, {2}, Slot <spell>{3}</spell>
forkapps.location.info.prompt.aisle={0}, Aisle <spell>{1}</spell>, {2}, Location not available
forkapps.location.info.prompt.aisle.slot={0}, Aisle <spell>{1}</spell>, {2}, Slot <spell>{3}</spell>

forkapps.putaway.license=License?
forkapps.putaway.license.help=scan or say license number
forkapps.putaway.license.help.ready=scan or say license number, then ready
forkapps.putaway.license.zero=at least 1 license must be entered
forkapps.putaway.license.get=getting work
forkapps.putaway.put.license=Put away license <spell>{0}</spell>
forkapps.putaway.pickup.qty=quantity
forkapps.putaway.pickup.qty.help=Enter quantity
forkapps.putaway.pickup.qty.zero=You must enter a value greater than zero
forkapps.putaway.pickup.qty.confirm=You said {0}, expected {1}, correct?
forkapps.putaway.pickup.qty.cancel=Canceling put away
forkapps.putaway.put.qty=quantity
forkapps.putaway.put.qty.help=Enter quantity
forkapps.putaway.put.qty.zero=You must enter a value greater than zero
forkapps.putaway.put.qty.confirm=You said {0}, expected {1}, correct?
forkapps.putaway.put.qty.confirm.less={0}, correct?
forkapps.putaway.put.qty.partial=You said {0}, expected {1}, is this a partial?
forkapps.putaway.put.qty.invalid=You said {0}, expected {1}

forkapps.replen.start=To start replenishment, say ready
forkapps.replen.verify.location.partial.confirm =You said {0}, expected {1}, correct?
forkapps.replen.verify.location.specified.expected = You said {0}, expected {1}
forkapps.replen.verify.location.enter.value.greater.zero = You must enter a value greater than zero
forkapps.replen.verify.location.quantity = Quantity?
forkapps.replen.verify.location.quantity.help = say the quantity
forkapps.replen.enter.value.greater.zero=You must enter a value greater than zero
forkapps.replen.pickup.qty=quantity
forkapps.replen.pickup.qty.help=Enter quantity
forkapps.replen.pickup.qty.cancel=Canceling replenishment
forkapps.replen.put.qty=quantity
forkapps.replen.put.qty.help=Enter quantity
forkapps.replen.put.qty.zero=You must enter a value greater than zero
forkapps.replen.put.qty.invalid=You said {0}, expected {1}
forkapps.replen.put.qty.confirm={0}, correct?
forkapps.replen.put.qty.partial=You said {0}, expected {1}, is this a partial?

forkapps.location.pickup={0}
forkapps.location.pickup.license={0}, license {1}
forkapps.location.pickup.license.qty={0}, license {1}, pick up {2}
forkapps.location.pickup.qty={0}, pick up {2}
forkapps.location.startlocation=Start location?
forkapps.location.startlocation.help=scan or say start location
forkapps.location.prompt=Location?
forkapps.location.prompt.help=scan or say location
forkapps.location.cd=check digits?
forkapps.location.cd.help=speak the check digits
forkapps.location.override=Override, correct?
forkapps.location.override.notallowed=Override not allowed in this region


#============================================
#Put to store prompts
#============================================
pts.start.work=To start Put to store work, say ready
pts.direct.to.flow.through=Go to {0}
pts.request.license=License?
pts.request.license.help=Enter license number
pts.request.license.no.more=No more not allowed. You must reserve at least one license.
pts.request.license.multiple.found=Found {0} licenses. Do you want to review the list?
pts.request.license.multiple.select={0}, select?
pts.request.license.multiple.end=End of matching licenses. Starting over
pts.request.license.cancel=cancel this license request?
pts.request.license.get.work=Getting work.
pts.assignment.loc.item=Assignment has {0} slot location {1} item, say ready
pts.assignment.loc.plural.item=Assignment has {0} slot locations {1} item, say ready
pts.assignment.loc.item.plural=Assignment has {0} slot location {1} items, say ready
pts.assignment.loc.plural.item.plural=Assignment has {0} slot locations {1} items, say ready
pts.assignment.loc.item.residual=Assignment has {0} slot location {1} item, and a total expected residual of {2}, say ready
pts.assignment.loc.plural.item.residual=Assignment has {0} slot locations {1} item, and a total expected residual of {2}, say ready
pts.assignment.loc.item.plural.residual=Assignment has {0} slot location {1} items, and a total expected residual of {2}, say ready
pts.assignment.loc.plural.item.plural.residual=Assignment has {0} slot locations {1} items, and a total expected residual of {2}, say ready
pts.assignment.performance=performance of last assignment was {0} percent of standard. Your daily performance is {1} percent of standard. To continue, say ready
pts.assignment.performance.na=Performance not available.
pts.assignment.complete=For next assignment, say ready

pts.put.assignment.preaisle={0}
pts.put.assignment.aisle=Aisle <spell>{0}</spell>
pts.put.assignment.postaisle={0}
pts.put.assignment.picking.complete=Picking complete
pts.put.assignment.reput.skips=To put skips, say ready
pts.put.assignment.skip.aisle.last=Last aisle. Skip aisle not allowed.

pts.close.container.confirm=Close container, correct?
pts.close.container.location=Location?
pts.close.container.location.help=Speak or scan the location digits
pts.close.container.cd=Check digit?
pts.close.container.cd.help=Speak or scan the check digits
pts.close.container.container=Container to close?
pts.close.container.container.help=Speak or scan the container number to close
pts.close.container.select=Close container {0}?
pts.close.container.select.end.singular=End of matching container. Starting over.
pts.close.container.select.end.plural=End of matching containers. Starting over.
pts.close.container.cancel=Cancel this close container request?

pts.new.container.container=New container ID?
pts.new.container.container.help=Speak or scan the new container number

pts.print.retrieve.newcontainer=Retrieve label from printer <spell>{0}</spell>, then say ready.
pts.print.retrieve.exception=Retrieve exception label from printer <spell>{0}</spell> and attach, then say ready.

pts.put.confirm.slot.help=speak or scan the check digits
pts.put.putprompt=Put {0}, {1}
pts.put.putprompt.item={2}, Put {0}, {1}
pts.put.putprompt.help=Say the quantity put
pts.put.putptompt.overpack=Is this an overpack?
pts.put.putptompt.overpack.notallowed=Overpacking not allowed.
pts.put.putptompt.overpack.noresidual=Cannot overpack. There are no residuals for this item.
pts.put.putptompt.overpack.not.enough=Can only overpack {0} items.
pts.put.putprompt.partial=Is this a partial?
pts.put.putprompt.partial.short=Is this a short?
pts.put.container=Container?
pts.put.container.help=Speak or scan the container number
pts.put.container.new.system=Opening new container.
pts.put.container.new.operator=Please open a new container.

pts.residual.check=Assignment complete.  Do you have residuals?
pts.residual.confirm.license=Confirm residuals for license {0}
pts.residual.confirm.license.help=Speak the residual amount for the license.
pts.residual.confirm.item=How many for item {0}?
pts.residual.confirm.item.help=Speak the residual amount for the item
pts.residual.return=return residual
pts.residual.return.location=return residual to {0}, say ready
pts.residual.return.cd=Check Digit?
pts.residual.return.cd.help=Speak the check digits

pts.location.info.prompt={0}, Aisle <spell>{1}</spell>, {2}, Slot <spell>{3}</spell>
pts.repick.skips.noskips=There are no skips.
pts.pass.not.allowed=Pass assignment not allowed.
pts.pass.confirm=Pass assignment, correct?
pts.pass.with.skips=Pass assignment not allowed.  You must repick skips.
pts.pass.complete=Assignment passed, say ready.
#============================================
#Selection Prompts
#============================================
selection.start.picking=To receive work, say ready
selection.pick.reverse.order=Pick in reverse order?
selection.getting.in-progress.work=getting in progress work
selection.get.normal.order=receiving picks in normal order, please wait
selection.get.reverse.order=receiving picks in reverse order, please wait

selection.get.workid=Work ID?
selection.get.workid.help=Say or scan the work ID or say no more when you are done
selection.get.workid.help.len=Say the {0} digit work ID  or scan the work ID  or say no more when you are done
selection.must.select.workid=You must enter at least one work ID, try again.
selection.request.work.multiple=found {0} work IDs, do you want to review the list?
selection.request.work.select=<spell>{0}</spell>, select?
selection.request.work.cancel=Cancel this work ID request?
selection.request.work.end=End of matching work IDs, starting over.
selection.get.number.workids=How many assignments?
selection.get.number.workids.help=Say the number of assignments you would like to receive
selection.get.number.workids.error=The number of work IDs must be between 1 and {0}, try again

selection.location.prompt={0}, Aisle {1}, {2}, slot {3}
selection.location.prompt.nopreaisle=aisle {1}, {2}, slot {3}
selection.location.prompt.noaisle={0}, {2}, slot {3}
selection.location.prompt.nopostaisle={0}, aisle {1}, slot {3}
selection.location.prompt.nopreaisle.noaisle={2}, slot {3}
selection.location.prompt.nopreaisle.nopostaisle=aisle {1}, slot {3}
selection.location.nopreaisle.noaisle.nopostaisle=slot {3}

selection.howmuchmore.singular={0} remaining at {1} line item
selection.howmuchmore.plural={0} remaining at {1} line items 
selection.repeatlastpick.notvalid=Repeat last pick not valid.
selection.repeatlastpick=last pick was aisle {0},, slot {1},, picked {2} of {3},
selection.repeatlastpick.no.aisle=last pick was slot {0},, picked {1} of {2},
selection.quantity=total quantity is <spell>{0}</spell> {1}
selection.only.available.single=only {0} work ID available, say ready 
selection.only.available.plural=only {0} work IDs available, say ready 
selection.assignment.notmatch.region=Assignment received does not match any current region profile, see your supervisor

#pick assignment direct to a location
selection.pick.assignment.preaisle={0}
selection.pick.assignment.aisle=Aisle {0}
selection.pick.assignment.postaisle={0}
selection.pick.assignment.picking.complete=Picking complete

summary.prompt.position.goaltime.single=position {0}, ID {1}, has a goal time of {2} minute, say ready
summary.prompt.position.goaltime.multi=position {0}, ID {1}, has a goal time of {2} minutes, say ready
summary.prompt.position=position {0}, ID {1}, say ready
summary.prompt.goaltime.single=ID {0}, has a goal time of {1} minute, say ready
summary.prompt.goaltime.multi=ID {0}, has a goal time of {1} minutes, say ready
summary.prompt=ID {0}, say ready

summary.prompt.chase.position.goaltime.single=chase assignment, position {0}, ID {1}, has a goal time of {2} minute, say ready
summary.prompt.chase.position.goaltime.multi=chase assignment, position {0}, ID {1}, has a goal time of {2} minutes, say ready
summary.prompt.chase.position=chase assignment, position {0}, ID {1}, say ready
summary.prompt.chase.goaltime.single=chase assignment, ID {0}, has a goal time of {1} minute, say ready
summary.prompt.chase.goaltime.multi=chase assignment, ID {0}, has a goal time of {1} minutes, say ready
summary.prompt.chase=chase assignment, ID {0}, say ready


selection.base.summary=Base summary?
selection.base.summary.prompt={0}, aisle {1}, {2}, slot {3}, {4}, quantity {6}, say ready

selection.base.summary.prompt.nopreaisle=aisle {1}, {2}, slot {3}, {4}, quantity {6}, say ready
selection.base.summary.prompt.nopreaisle.noaisle={2}, slot {3}, {4}, quantity {6}, say ready
selection.base.summary.prompt.nopreaisle.noaisle.nopostaisle=slot {3}, {4}, quantity {6}, say ready
selection.base.summary.prompt.noaisle={0},{2}, slot {3}, {4}, quantity {6}, say ready
selection.base.summary.prompt.nopostaisle={0}, aisle {1}, slot {3}, {4}, quantity {6}, say ready


selection.base.summary.prompt.id={0}, aisle {1}, {2}, slot {3}, {4}, ID {5}, quantity {6}, say ready

selection.base.summary.prompt.nopreaisle.id=aisle {1}, {2}, slot {3}, {4}, ID {5}, quantity {6}, say ready
selection.base.summary.prompt.nopreaisle.noaisle.id={2}, slot {3}, {4}, ID {5}, quantity {6}, say ready
selection.base.summary.prompt.nopreaisle.noaisle.nopostaisle.id=slot {3}, {4}, ID {5}, quantity {6}, say ready
selection.base.summary.prompt.noaisle.id={0},{2}, slot {3}, {4}, ID {5}, quantity {6}, say ready
selection.base.summary.prompt.nopostaisle.id={0}, aisle {1}, slot {3}, {4}, ID {5}, quantity {6}, say ready

selection.base.summary.cancel=cancel base summary?
selection.pick.base.items=Pick base items?

#pick prompt
selection.pick.prompt.checkdigit.help=Say check digits
selection.pick.prompt.pick.quantity=Pick {0} {1} {2} {3} {4}
selection.pick.prompt.pick.quantity.help=Say pick quantity
selection.pick.prompt.pick.quantity.greater=You said {0} only asked for {1}. Try again.
selection.pick.prompt.pick.quantity.less=You said {0} asked for {1}. Is this a short product?
selection.pick.prompt.pick.quantity.zero=you must enter a quantity greater than zero for a partial
selection.pick.prompt.short.product.verify = {0}, correct?
selection.pick.prompt.check.digit = check digit?
selection.pick.prompt.short.product.nothere.1 = Short product not allowed until pick quantity spoken
selection.pick.prompt.short.product.nothere.2 = Report Shorts when prompted for quantity
selection.pick.prompt.partial.nothere.1 = Partial not allowed until pick quantity is spoken.
selection.pick.prompt.partial.nothere.2 = Report partial when prompted for quantity
selection.pick.prompt.short.product.quantity = how many did you pick?
selection.pick.prompt.short.product= Is this a short product?
selection.pick.prompt.identical.product.short.product = Identical Product verification and check digits. Is this a short product
selection.pick.prompt.wrong.pvid = You must speak the product ID. Try Again.
selection.pick.prompt.speak.check.digit = You must speak the check digit.

selection.pick.prompt.single.pick.quantity={0} Pick {1} {2} {3} {4} {5}
selection.pick.prompt.single.prompt.quantity=Quantity?
selection.pick.prompt.single.slot.only={0} {1} {2} {3} {4}
selection.pick.prompt.id = ID {0}

selection.pick.prompt.partial.quantity=Quantity?
selection.pick.prompt.partial.confirm=partial, correct?
selection.pick.prompt.partial.err.target=partial not allowed when picks have a target container
selection.pick.prompt.partial.err.qtyone=Partial not allowed when pick quantity is one.
selection.pick.prompt.partial.err.no.container=Partial not allowed when not picking to containers
selection.pick.prompt.partial.err.putprompt=Partial only allowed at put prompt.
selection.pick.prompt.put.quantity.help=Say partial quantity
selection.pick.prompt.go.back.for.shorts=Going back for shorts
selection.pick.prompt.shorts.reported=shorts are reported
selection.pick.prompt.goback.for.shorts.skips=Going back for skips and shorts
selection.pick.prompt.goback.for.shorts=Going back for shorts
selection.pick.prompt.goback.for.skips=Going back for skips
selection.pick.prompt.picking.skips.shorts=Picking skips and shorts
selection.pick.prompt.picking.shorts=Picking shorts

selection.pick.prompt.reopen.container=reopen {0}

selection.case.label.cd=Case label?
selection.case.label.cd.help=Say the case label check digits

#weight and serial number prompts
selection.weights.prompt.weight = weight {0} of {1}
selection.weights.help.weight = Enter weight of item
selection.weights.prompt.weight.zero = you must enter a weight greater than zero, try again
selection.weights.prompt.weight.outofrange = {0} out of range
selection.weights.prompt.weight.description = minimum is {0}, maximum is {1}
selection.weights.prompt.serial = serial number {0} of {1}
selection.weights.help.serial = enter serial number

selection.weights.prompt.review.weight.only = Unit {0}, weight was {1}, say ready
selection.weights.prompt.review.serial.only = Unit {0}, serial number was <spell>{2}</spell>, say ready
selection.weights.prompt.review.weight.and.serial = Unit {0}, weight was {1}, serial number was <spell>{2}</spell>, say ready 

selection.weights.prompt.undo = last entry, all entries, or continue?
selection.weights.prompt.undo.all = re enter all items, correct?
selection.weights.prompt.undo.last = re enter item {0}, correct?
selection.weights.prompt.short = you picked {0} of {1} items, is this a short product?
selection.weights.prompt.short.not.allowed = short product not allowed
selection.weights.complete=Entries complete

#deliver assignment
selection.deliver.assignment.load=Load at {0}
selection.deliver.assignment.load.multi=Load position {0} ID {1} at {2}
selection.deliver.assignment.deliver=Deliver to {0}
selection.deliver.assignment.deliver.multi=Deliver position {0} ID {1} to {2}
selection.deliver.assignment.confirm.delivery=Confirm Delivery
selection.deliver.assignment.checkdigit.help=say location check digits

#complete assignment
selection.complete.assignment.confirm=Assignment complete.  For next assignment, say ready
selection.pass.assignment.confirm=Assignment passed.  For next assignment, say ready

#Lot Tracking
lot.tracking.lot.text.help=Say lot number
lot.tracking.quantity.greater=You said {0}, expected {1}. Say ready.
lot.tracking.lot.quantity=Quantity for this {0}
lot.tracking.lot.quantity.help=Say quantity for the lot
lot.tracking.short.product.prompt=You picked 0 of {0} items.  Is this a short product?
lot.tracking.generic.lot.number=Lot Number

#Get Container and Print Label
selection.container.number.of.labels=Number of Labels for ID {0}
selection.container.number.of.labels.help=Say number of labels 
selection.new.container.prompt.for.container=New Container ID? Position {0}
selection.new.container.prompt.for.container.id=New Container ID? 
selection.new.container.prompt.for.container.help=speak or scan the container ID
selection.new.container.prompt.open.last.multiple=Open {0} Position {1}
selection.new.container.prompt.open.last=Open {0}
selection.container.preprint.all.labels=Preprint all labels for ID {0}

selection.put.prompt.for.container=Container?
selection.put.prompt.for.container.help=Say container number
selection.put.prompt.for.container.multiple=Put {0} in {1}
selection.put.prompt.wrong.container=Wrong {0}. Try again.

selection.close.container.prompt.for.container=Container?
selection.close.container.prompt.for.container.help=Say container number
selection.close.container.not.allowed.multiple.assignments=close container not allowed when picking multiple assignments
selection.close.container.not.allowed.target.containers=close container not allowed when picks have a target container
selection.close.container.not.allowed.only.container=Can't close the only container
selection.close.container.not.allowed=close container not allowed
selection.close.container.not.valid=<spell>{0}</spell> not valid try again
selection.close.container.already.closed=<spell>{0}</spell> is already closed. Try again

selection.new.container.not.allowed.target.containers=New container not allowed when picks have a target container
selection.new.container.multiple.put.prompt=New container only allowed at put prompt
selection.new.container.confirm=new container, correct?
selection.new.container.close.current.container=close current container?
selection.new.container.not.allowed=New container not allowed
selection.new.container.no.containers.returned=No containers returned from host

selection.reprint.label.container.not.valid = Invalid <spell>{0}</spell>, Try again
selection.reprint.labels.all.correct = All correct?
selection.reprintlabel.not.allowed=Reprint labels not allowed.

selection.review.cluster.prompt = ID {0} Position {1}
selection.review.contents.prompt = {0} picked {1}
selection.review.cluster.not.valid=Review cluster not valid
selection.review.contents.for.container = Review contents for Container {0}?
selection.review.content.continue.prompt = {0}, To return to picking, say ready
selection.review.content.complete=Review complete
selection.review.content.not.valid=Review contents not valid

selection.pass.not.allowed=Pass assignment not allowed.
selection.pass.confirm=Pass assignment, correct?

#============================================
#Receiving Prompts
#============================================
receiving.purchase.order=Purchase order?
receiving.purchase.order.help=Scan or speak purchase order
receiving.purchase.order.rush.items=There are rush items in the PO
receiving.sku=SKU?
receiving.sku.help=Scan or speak the SKU
receiving.sku.not.found=SKU not found. Scan or speak UPC.
receiving.sku.not.found.help=Scan or speak the UPC
receiving.choose.item=Choose the item from the list
receiving.choose.item.help=Pick from the list the item you are receiving
receiving.item.not.found=Item not found. Skip this item.
receiving.item.quantity=Quantity?
receiving.item.quantity.help=Speak the quantity received
receiving.item.remaining=There are {0} remaining
receiving.authorize=You said {0}, only {1} remaining. Authorize?
receiving.authorize.quantity=Please have your supervisor authorize this quantity
receiving.authorize.quantity.help=Speak or key in the authorization code
receiving.authorize.approved=Quantity {0} approved
receiving.lpn=LPN?
receiving.lpn.help=Scan or speak pallet ID
receiving.error=An error has occurred.
receiving.po.complete=PO is complete. Correct?

#print prompts
receiving.print.confirm.sku=SKU?
receiving.print.confirm.sku.help=Say or scan SKU followed by ready.
receiving.print.wrong.sku=Wrong SKU. Would you like to re enter the SKU?
receiving.print.skipping.item=Skipping item.
